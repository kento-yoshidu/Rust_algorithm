// https://atcoder.jp/contests/abc208/tasks/abc208_c

pub fn run(n: usize, k: usize, a: Vec<usize>) -> Vec<usize> {
    let base = k / n;
    let rest = k % n;

    let mut order = a.clone();
    order.sort();
    let list = &order[0..rest];

    (0..n)
        .map(|i| {
            if list.contains(&a[i]) {
                base + 1
            } else {
                base
            }
        })
        .collect()
}

#[cfg(test)]
mod tests {
    use super::*;

    struct TestCase(usize, usize, Vec<usize>, Vec<usize>);

    #[test]
    fn test() {
        let tests = [
            TestCase(2, 7, vec![1, 8], vec![4, 3]),
            TestCase(1, 3, vec![33], vec![3]),
            TestCase(7, 1000000000000, vec![99, 8, 2, 4, 43, 5, 3], vec![142857142857, 142857142857, 142857142858, 142857142857, 142857142857, 142857142857, 142857142857]),
            TestCase(13, 30, vec![751001583, 576180889, 864261983, 797723426, 878617086, 674882578, 927009434, 439962455, 38241650, 788318937, 996463731, 143631905, 439667210], vec![2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3]),
            TestCase(25, 944208366269691039, vec![960743382, 637022796, 341461137, 783108863, 159021122, 669712102, 20994211, 382330417, 251474553, 142380615, 383125412, 345324564, 62498231, 537558042, 946675244, 270153610, 135097256, 770151437, 483214126, 737148822, 931542984, 605497238, 809852239, 613932830, 141539357], vec![37768334650787641, 37768334650787641, 37768334650787642, 37768334650787641, 37768334650787642, 37768334650787641, 37768334650787642, 37768334650787642, 37768334650787642, 37768334650787642, 37768334650787642, 37768334650787642, 37768334650787642, 37768334650787642, 37768334650787641, 37768334650787642, 37768334650787642, 37768334650787641, 37768334650787642, 37768334650787641, 37768334650787641, 37768334650787641, 37768334650787641, 37768334650787641, 37768334650787642]),
            TestCase(7, 887241945095560790, vec![691189126, 510986614, 814844645, 692921132, 274926535, 322285630, 195032151], vec![126748849299365827, 126748849299365827, 126748849299365827, 126748849299365827, 126748849299365827, 126748849299365827, 126748849299365828]),
        ];

        for TestCase(n, k, a, expected) in tests {
            assert_eq!(run(n, k, a), expected);
        }
    }
}
