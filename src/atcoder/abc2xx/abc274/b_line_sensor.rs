// https://atcoder.jp/contests/abc182/tasks/abc182_c

fn run(_h: usize, w: usize, c: Vec<&str>) -> Vec<usize> {
    (0..w)
        .map(|i| {
            c.iter()
                .filter(|s| {
                    s.chars().nth(i).unwrap() == '#'
                })
                .count()
        })
        .collect()
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test() {
        assert_eq!(vec![1, 2, 0, 3], run(3, 4, vec!["#..#", ".#.#", ".#.#"]));
        assert_eq!(vec![0, 0, 0, 0, 0, 0, 0], run(3, 7, vec![".......", ".......", "......."]));
        assert_eq!(vec![2, 7, 4], run(8, 3, vec![".#.", "###", ".#.", ".#.", ".##", "..#", "##.", ".##"]));
        assert_eq!(vec![0, 5, 1, 2, 2, 0, 0, 5, 3, 3, 3, 3, 0, 0, 1, 1, 3, 1, 1, 0, 0, 5, 3, 3, 3, 3, 0, 0, 5, 1, 1, 1, 5, 0, 0, 3, 2, 2, 2, 2, 0, 0, 5, 3, 3, 3, 3], run(5, 47, vec![".#..#..#####..#...#..#####..#...#...###...#####", ".#.#...#.......#.#...#......##..#..#...#..#....", ".##....#####....#....#####..#.#.#..#......#####", ".#.#...#........#....#......#..##..#...#..#....", ".#..#..#####....#....#####..#...#...###...#####"]));
    }
}
