// https://atcoder.jp/contests/abc272/tasks/abc272_b

use itertools::Itertools;

pub fn run(n: usize, _m: usize, k: Vec<Vec<usize>>) -> &'static str {
    let mut vec = vec![vec![false; n]; n];

    for v in k {
        for per in v.iter().skip(1).permutations(2) {
            vec[per[0]-1][per[1]-1] = true;
        }
    }

    if vec.iter()
        .all(|v| {
            v.iter().filter(|b| **b == false).count() < 2
        }) {
            "Yes"
        } else {
            "No"
        }
}

#[cfg(test)]
mod tests {
    use super::*;

    struct TestCase(usize, usize, Vec<Vec<usize>>, &'static str);

    #[test]
    fn test() {
        let tests = [
            TestCase(3, 3, vec![vec![2, 1, 2], vec![2, 2, 3], vec![2, 1, 3]], "Yes"),
            TestCase(4, 2, vec![vec![3, 1, 2, 4], vec![3, 2, 3, 4]], "No"),
            TestCase(2, 1, vec![vec![2, 1, 2]], "Yes"),
            TestCase(23, 30, vec![vec![7, 3, 6, 9, 14, 15, 22, 23,],
                                    vec![6, 5, 8, 10, 12, 18, 21],
                                    vec![23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
                                    vec![4, 6, 13, 17, 23],
                                    vec![16, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 20, 21, 22, 23],
                                    vec![11, 4, 6, 9, 10, 12, 13, 14, 19, 20, 22, 23],
                                    vec![23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
                                    vec![22, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23],
                                    vec![17, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23],
                                    vec![9, 4, 5, 7, 10, 16, 19, 20, 21, 22],
                                    vec![13, 1, 4, 6, 7, 8, 13, 15, 16, 17, 20, 21, 22, 23],
                                    vec![2, 18, 22],
                                    vec![2, 6, 22],
                                    vec![21, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
                                    vec![8, 5, 10, 12, 13, 14, 15, 18, 21],
                                    vec![4, 11, 15, 18, 23],
                                    vec![15, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 21, 23],
                                    vec![15, 1, 2, 3, 4, 6, 7, 9, 10, 14, 15, 17, 19, 21, 22, 23],
                                    vec![15, 1, 2, 5, 7, 8, 9, 12, 13, 14, 16, 18, 19, 20, 22, 23],
                                    vec![21, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
                                    vec![6, 7, 8, 10, 19, 21, 23],
                                    vec![18, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 23],
                                    vec![16, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 17, 20, 21, 22, 23],
                                    vec![9, 1, 3, 6, 7, 9, 12, 13, 18, 22],
                                    vec![3, 3, 10, 17],
                                    vec![14, 1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 19, 20, 21, 22],
                                    vec![17, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23],
                                    vec![23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
                                    vec![5, 3, 6, 12, 18, 22]], "Yes"),
        ];

        for TestCase(n, m, k, expected) in tests {
            assert_eq!(run(n, m, k), expected);
        }
    }
}
