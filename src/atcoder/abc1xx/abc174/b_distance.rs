#[allow(dead_code)]
pub fn run(k: usize, vec: Vec<(i64, i64)>) -> i32 {
    let mut ans = 0;

    for (x, y) in vec.iter() {
        let sqrt = ((x*x + y*y) as f64).sqrt();

        if k as f64 >= sqrt {
            ans += 1;
        }
    }

    ans
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test() {
        assert_eq!(3, run(5, vec![(0, 5), (-2, 4), (3, 4), (4, -4)]));
        assert_eq!(7, run(3, vec![(1, 1), (1, 1), (1, 1), (1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3), (3, 1), (3, 2), (3, 3)]));
        assert_eq!(6, run(100000, vec![(14309, -32939), (-56855, 100340), (151364, 25430), (103789, -113141), (147404, -136977), (-37006, -30929), (188810, -49557), (13419, 70401), (-88280, 165170), (-196399, 137941), (-176527, -61904), (46659, 115261), (-153551, 114185), (98784, -6820), (94111, -86268), (-30401, 61477), (-55056, 7872), (5901, -163796), (138819, -185986), (-69848, -96669)]));
    }
}
